import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import {
  Box,
  Button,
  Grid,
  GridItem,
  Input,
  Spinner,
  Stack,
  StackItem,
  VStack,
} from "@chakra-ui/react";
import { ChangeEvent, useEffect, useState } from "react";
import { Product, ProductList } from "@/types";
import axios from "axios";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const [productInfo, setProductInfo] = useState<Product[]>([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    (async () => {
      try {
        setLoading(true);
        const res = await axios?.get<ProductList>("/api/product/list");
        setProductInfo(res?.data?.content);
      } catch (error) {
        console.error(error);
      } finally {
        setLoading(false);
      }
    })();
  }, []);

  const handleDelete = async (id?: string) => {
    try {
      setLoading(true);
      await axios?.delete<ProductList>(`/api/product/delete/${id}`);
      setProductInfo(productInfo?.filter((item) => item?.id !== id));
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
    }
  };
  return (
    <>
      {loading && <Spinner />}
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Grid templateColumns="repeat(5, 1fr)" gap={6}>
          {productInfo?.map((prod: any, index: number) => (
            <GridItem key={`key-${prod?.id}-${index}`}>
              <Box>
                <VStack>
                  <StackItem>{prod?.title}</StackItem>
                  <StackItem>{prod?.description}</StackItem>
                  <StackItem>Price: ${prod?.price}</StackItem>
                  <StackItem>Quantity: {prod?.quantity}</StackItem>
                </VStack>
              </Box>
              <StackItem>
                <Button
                  colorScheme="teal"
                  marginLeft={2}
                  variant="link"
                  onClick={() => router?.push(`/edit/${prod?._id?.toString() || ""}`)}
                >
                  Edit
                </Button>
              </StackItem>
              <StackItem>
                <Button
                  colorScheme="red"
                  marginLeft={2}
                  variant="link"
                  onClick={() => handleDelete(prod?._id || "")}
                >
                  Delete
                </Button>
              </StackItem>
            </GridItem>
          ))}
        </Grid>
      </main>
    </>
  );
}
